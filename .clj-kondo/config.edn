{:linters {:unused-binding { ;; ignore unused :as binding.
                            :exclude-destructured-as true}
           :unresolved-symbol { ;; `thrown-with-msg-and-data?` is a legit extension to the `is` macro
                               ;; via an `assert-expr` defmethod (see clojure.test doc)
                               :exclude [(clojure.test/is [thrown-with-msg-and-data?])]}}

 :lint-as {clojure.test.check.clojure-test/defspec clojure.core/def
           jackdaw.data/defn->data clojure.core/defn
           jackdaw.test.transports/deftransport clojure.core/defn
           manifold.deferred/loop clojure.core/let}}